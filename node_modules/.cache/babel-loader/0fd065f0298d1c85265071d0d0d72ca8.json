{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw new Error('Could not get blogs from the database');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsLoading(false);\n        setError(null);\n      }).catch(err => {\n        setIsLoading(false);\n        setError(err);\n      });\n    }, 3000);\n  }, []);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetch, \"oHNKtHcXBLfWEYHeRSlN5KEv5w0=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/useFetch.jsx"],"names":["useState","useEffect","useFetch","data","setData","isLoading","setIsLoading","error","setError","setTimeout","fetch","url","then","res","ok","Error","json","catch","err"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACC,GAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,gBAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH;;AAED,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAPL,EAQKJ,IARL,CAQUT,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAZL,EAaKS,KAbL,CAaWC,GAAG,IAAI;AACVZ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACU,GAAD,CAAR;AACH,OAhBL;AAiBH,KAlBS,EAkBP,IAlBO,CAAV;AAoBH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,SAAO;AAAEf,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CA7BD;;GAAML,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useFetch = () => {\n    const [data, setData] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        setTimeout(() => {\n            fetch(url)\n                .then(res => {\n                    if (!res.ok) {\n                        throw new Error('Could not get blogs from the database');\n                    }\n\n                    return res.json()\n                })\n                .then(data => {\n                    setData(data)\n                    setIsLoading(false)\n                    setError(null)\n                })\n                .catch(err => {\n                    setIsLoading(false)\n                    setError(err)\n                })\n        }, 3000);\n\n    }, [])\n\n    return { data, isLoading, error }\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}