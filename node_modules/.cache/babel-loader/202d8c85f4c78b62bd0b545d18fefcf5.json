{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Blogs.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { FiShare } from 'react-icons/fi';\nimport { BiCommentDetail } from 'react-icons/bi';\nimport { IconContext } from 'react-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blogs = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [liked, setLiked] = useState(null);\n  const [blog, setBlog] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const likePost = () => {\n    liked ? setLiked(false) : setLiked(true);\n    fetch(`http://192.168.1.98:5000/blogs/${blog.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        liked: !blog.liked\n      })\n    }).then(() => {});\n  };\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch('http://192.168.1.98:5000/blogs/' + id, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Could not get data from the database');\n        }\n\n        return res.json();\n      }).then(data => {\n        setBlog(data);\n\n        if (data.liked === true) {\n          setLiked(true);\n        } else if (data.liked === false) {\n          setLiked(false);\n        }\n\n        setIsLoading(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {// empty if statement\n        } else {\n          setIsLoading(false);\n          setError(err);\n        }\n      });\n    }, 500);\n    return () => abortCont.abort();\n  }, [id, likePost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-details\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), blog && /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", blog.author, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"blog-img\",\n        src: blog.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons-source\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"source\",\n          children: [\"Image source \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: blog.image,\n            children: \"Unsplash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iconsSource\",\n          children: [liked ? /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              color: 'red'\n            },\n            children: /*#__PURE__*/_jsxDEV(FaHeart, {\n              onClick: likePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {\n            className: \"test\",\n            onClick: likePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FiShare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BiCommentDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-body\",\n        children: blog.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Blogs, \"aJ3oQlLx4Ny/M5AlF/+4W2l9nuQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Blogs;\nexport default Blogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Blogs.jsx"],"names":["useState","useEffect","useParams","Loading","Error","FaRegHeart","FaHeart","FiShare","BiCommentDetail","IconContext","Blogs","id","liked","setLiked","blog","setBlog","isLoading","setIsLoading","error","setError","likePost","fetch","method","headers","body","JSON","stringify","then","abortCont","AbortController","setTimeout","signal","res","ok","json","data","catch","err","name","abort","title","author","image","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; \nimport Loading from './Loading';\nimport Error from './Error';\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { FiShare } from 'react-icons/fi'\nimport { BiCommentDetail } from 'react-icons/bi'\nimport { IconContext } from 'react-icons';\n\nconst Blogs = () => {\n    const { id } = useParams();\n    const [liked, setLiked] = useState(null);\n    const [blog, setBlog] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [error, setError] = useState(null)\n\n    const likePost = () => {\n        liked ? setLiked(false) : setLiked(true);\n        fetch(`http://192.168.1.98:5000/blogs/${blog.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ liked: !blog.liked }),\n        })\n            .then(() => {\n\n            })\n    }\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch('http://192.168.1.98:5000/blogs/' + id, { signal: abortCont.signal })\n                .then(res => {\n                    if (!res.ok) {\n                        throw new Error('Could not get data from the database');\n                    }\n                    return res.json()\n                })\n                .then(data => {\n                    setBlog(data)\n                    if (data.liked === true){\n                        setLiked(true)\n                    } else if (data.liked === false){\n                        setLiked(false);\n                    }\n                    setIsLoading(false)\n                    setError(null)\n                })\n                .catch(err => {\n                    if (err.name === 'AbortError') {\n                        // empty if statement\n                    } else {\n                        setIsLoading(false)\n                        setError(err)\n                    }\n\n                })\n        }, 500);\n\n        return () => abortCont.abort()\n\n    }, [id, likePost])\n\n    return (\n        <div className=\"blog-details\">\n            { isLoading && <Loading /> }\n            { error && <Error/> }\n            { blog && (\n                <article>\n                    <h1>{blog.title}</h1>\n                    <p> {blog.author} </p>\n                    <img className=\"blog-img\" src={blog.image} alt=\"\" />\n                    <div className=\"icons-source\">\n                        <p className='source'>Image source <a href={blog.image}>Unsplash</a></p>\n                        <div className=\"iconsSource\">\n                            {liked ? <IconContext.Provider value={{ color: 'red' }}>\n                                        <FaHeart onClick={likePost} />\n                                    </IconContext.Provider> \n\n                                : <FaRegHeart className='test' onClick={likePost} /> }\n\n                            <FiShare />\n                            <BiCommentDetail />\n                        </div>\n                    </div>\n                    <div className='blog-body'>{ blog.body }</div>\n                </article>\n            )}\n        </div>\n    );\n}\n\nexport default Blogs;"]},"metadata":{},"sourceType":"module"}