{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLiked, setIsLiked] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Could not get data from the database');\n        }\n\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsLoading(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {// empty if statement\n        } else {\n          setIsLoading(false);\n          setError(err);\n        }\n      });\n    }, 1500);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isLiked,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetch, \"mxqkLhNjF8fZDkEffYYiwAlwOMQ=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/useFetch.jsx"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","isLiked","setIsLiked","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAKC,GAAF,IAAW;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAACZ,GAAD,EAAM;AAAEa,QAAAA,MAAM,EAAEJ,SAAS,CAACI;AAApB,OAAN,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,gBAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OANL,EAOKJ,IAPL,CAOUb,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAXL,EAYKW,KAZL,CAYWC,GAAG,IAAI;AACV,YAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B,CAC3B;AACH,SAFD,MAEO;AACHjB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,UAAAA,QAAQ,CAACY,GAAD,CAAR;AACH;AAEJ,OApBL;AAqBH,KAtBS,EAsBP,IAtBO,CAAV;AAwBA,WAAO,MAAMX,SAAS,CAACa,KAAV,EAAb;AAEH,GA7BQ,EA6BN,CAACtB,GAAD,CA7BM,CAAT;AA+BA,SAAO;AAAEC,IAAAA,IAAF;AAAQI,IAAAA,OAAR;AAAiBF,IAAAA,SAAjB;AAA4BI,IAAAA;AAA5B,GAAP;AACH,CAtCD;;GAAMR,Q;;AAwCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useFetch = ( url ) => {\n    const [data, setData] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [isLiked, setIsLiked] = useState(false)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch(url, { signal: abortCont.signal })\n                .then(res => {\n                    if (!res.ok) {\n                        throw new Error('Could not get data from the database');\n                    }\n                    return res.json()\n                })\n                .then(data => {\n                    setData(data)\n                    setIsLoading(false)\n                    setError(null)\n                })\n                .catch(err => {\n                    if (err.name === 'AbortError') {\n                        // empty if statement\n                    } else {\n                        setIsLoading(false)\n                        setError(err)\n                    }\n\n                })\n        }, 1500);\n\n        return () => abortCont.abort()\n\n    }, [url])\n\n    return { data, isLiked, isLoading, error };\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}