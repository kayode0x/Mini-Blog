{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx\",\n    _s = $RefreshSig$();\n\nimport useFetch from './useFetch';\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Replies = ({\n  comments,\n  id\n}) => {\n  _s();\n\n  const {\n    data: blogs,\n    error\n  } = useFetch(`http://192.168.1.98:5000/blogs/${id}`);\n  const [liked, setLiked] = useState(null);\n  const [commentMatch, setCommentMatch] = useState(false);\n\n  const likeComment = (e, val) => {\n    let x = val.id - 1;\n    let z = blogs.discussion[x].id;\n    console.log(blogs.discussion[x].id);\n    console.log(y);\n    let p = z - x;\n    p == 1 && liked ? setLiked(false) : setLiked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentError\",\n      children: \"Cannot retrieve comments \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this), blogs && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentSection\",\n      children: blogs.discussion.map(discussion => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"commentImg\",\n            src: discussion.thumbnail,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: discussion.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }, this), \" \", discussion.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentEmoji\",\n            children: liked ? /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n              value: {\n                color: 'red',\n                className: 'love-icon'\n              },\n              children: /*#__PURE__*/_jsxDEV(FaHeart, {\n                onClick: e => likeComment(e, discussion)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {\n              onClick: e => likeComment(e, discussion)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)\n      }, discussion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Replies, \"hUvcEBs+QglWCQqZG6hcp7Thnro=\", false, function () {\n  return [useFetch];\n});\n\n_c = Replies;\nexport default Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx"],"names":["useFetch","FaRegHeart","FaHeart","IconContext","useState","Replies","comments","id","data","blogs","error","liked","setLiked","commentMatch","setCommentMatch","likeComment","e","val","x","z","discussion","console","log","y","p","map","thumbnail","user","comment","color","className"],"mappings":"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","sourcesContent":["import useFetch from './useFetch';\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState } from 'react';\n\nconst Replies = ({ comments, id }) => {\n\n    const { data: blogs, error } = useFetch(`http://192.168.1.98:5000/blogs/${id}`);\n    const [liked, setLiked] = useState(null);\n    const [commentMatch, setCommentMatch] = useState(false);\n\n    const likeComment = (e, val) => {\n        let x = val.id - 1;\n        let z = blogs.discussion[x].id\n        console.log(blogs.discussion[x].id)\n        console.log(y)\n        let p = z-x;\n        p == 1 && liked ? setLiked(false) : setLiked(true)\n        \n    }\n\n    return (\n        <>\n            {error && <div className=\"commentError\">Cannot retrieve comments </div>}\n            { blogs && <div className=\"commentSection\">\n                {\n                    blogs.discussion.map((discussion) => (\n                        <div key={discussion.id}>\n                            <div className=\"comment\">\n                                <img className='commentImg' src={discussion.thumbnail} alt=\"\"/>\n                                <div className=\"commentBody\">\n                                    <p> <span>{discussion.user}</span> {discussion.comment}</p>\n                                    \n                                </div>\n                                <div className=\"commentEmoji\">\n                                    {liked ? <IconContext.Provider value={{ color: 'red', className: 'love-icon' }}>\n                                        <FaHeart onClick={(e) => likeComment(e, discussion)} />\n                                    </IconContext.Provider>\n\n                                        : <FaRegHeart onClick={(e) => likeComment(e, discussion)} />}\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div> }\n        </>\n        \n    );\n}\n\nexport default Replies;"]},"metadata":{},"sourceType":"module"}