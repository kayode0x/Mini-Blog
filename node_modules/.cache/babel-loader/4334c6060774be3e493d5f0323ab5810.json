{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx\",\n    _s = $RefreshSig$();\n\nimport useFetch from './useFetch';\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Replies = ({\n  comments,\n  id\n}) => {\n  _s();\n\n  const [liked, setLiked] = useState(null);\n  const {\n    data: blogs,\n    error\n  } = useFetch(`http://192.168.1.98:5000/blogs/${id}`);\n  console.log(blogs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentError\",\n      children: \"Cannot retrieve comments \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }, this), blogs && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentSection\",\n      children: blogs.discussion.map(discussion => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"commentImg\",\n            src: discussion.thumbnail,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: discussion.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 41\n              }, this), \" \", discussion.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 33\n          }, this), liked ? /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              color: 'red',\n              className: 'love-icon'\n            },\n            children: /*#__PURE__*/_jsxDEV(FaHeart, {\n              onClick: likePost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {\n            className: \"test\",\n            onClick: likePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this)\n      }, discussion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Replies, \"vK/I5TCne/9yf8ODmnYiBMm/BAw=\", false, function () {\n  return [useFetch];\n});\n\n_c = Replies;\nexport default Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx"],"names":["useFetch","FaRegHeart","FaHeart","IconContext","useState","Replies","comments","id","liked","setLiked","data","blogs","error","console","log","discussion","map","thumbnail","user","comment","color","className","likePost"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM;AAAEM,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA;AAAf,MAAyBZ,QAAQ,CAAE,kCAAiCO,EAAG,EAAtC,CAAvC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBACI;AAAA,eACKC,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEMD,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAEHA,KAAK,CAACI,UAAN,CAAiBC,GAAjB,CAAsBD,UAAD,iBACjB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,GAAG,EAAEA,UAAU,CAACE,SAA5C;AAAuD,YAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI;AAAA,2CAAI;AAAA,0BAAOF,UAAU,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAAJ,OAAoCH,UAAU,CAACI,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAKKX,KAAK,gBAAG,QAAC,WAAD,CAAa,QAAb;AAAsB,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE,KAAT;AAAgBC,cAAAA,SAAS,EAAE;AAA3B,aAA7B;AAAA,mCACL,QAAC,OAAD;AAAS,cAAA,OAAO,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAIA,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,OAAO,EAAEA;AAAtC;AAAA;AAAA;AAAA;AAAA,kBATV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUP,UAAU,CAACR,EAArB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFG;AAAA;AAAA;AAAA;AAAA,YAFf;AAAA,kBADJ;AAyBH,CA9BD;;GAAMF,O;UAG6BL,Q;;;KAH7BK,O;AAgCN,eAAeA,OAAf","sourcesContent":["import useFetch from './useFetch';\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState } from 'react';\n\nconst Replies = ({ comments, id }) => {\n    const [liked, setLiked] = useState(null);\n\n    const { data: blogs, error } = useFetch(`http://192.168.1.98:5000/blogs/${id}`);\n    console.log(blogs)\n    return (\n        <>\n            {error && <div className=\"commentError\">Cannot retrieve comments </div>}\n            { blogs && <div className=\"commentSection\">\n                {\n                    blogs.discussion.map((discussion) => (\n                        <div key={discussion.id}>\n                            <div className=\"comment\">\n                                <img className='commentImg' src={discussion.thumbnail} alt=\"\"/>\n                                <div className=\"commentBody\">\n                                    <p> <span>{discussion.user}</span> {discussion.comment}</p>\n                                </div>\n                                {liked ? <IconContext.Provider value={{ color: 'red', className: 'love-icon' }}>\n                                    <FaHeart onClick={likePost} />\n                                </IconContext.Provider>\n\n                                    : <FaRegHeart className='test' onClick={likePost} />}\n                            </div>\n                        </div>\n                    ))\n                }\n            </div> }\n        </>\n        \n    );\n}\n\nexport default Replies;"]},"metadata":{},"sourceType":"module"}