{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Discussions.jsx\",\n    _s = $RefreshSig$();\n\nimport LikedComment from './LikedComment';\nimport LikedReply from './LikedReply';\nimport { useState, useEffect } from 'react';\nimport AddComment from './AddComment';\nimport CommentGoBack from './CommentGoBack';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Discussions = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [error, setError] = useState(false);\n  const [discussions, setDiscussions] = useState(null);\n  const [replies, setReplies] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(`http://192.168.1.98:5000/blogs/${id}`, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Could not get data from the database');\n      }\n\n      return res.json();\n    }).then(data => {\n      setDiscussions(data);\n    }).catch(err => {\n      if (err.name === 'AbortError') {// empty if statement\n      } else {\n        setError(true);\n      }\n    });\n    return () => abortCont.abort();\n  }, [id, discussions]); //Like a comment\n\n  const likeComment = did => {\n    const url = `http://192.168.1.98:5000/blogs/${id}`;\n    setDiscussions({ ...discussions,\n      discussion: discussions.discussion.map(discussion => {\n        if (discussion.id === did) {\n          return { ...discussion,\n            liked: !discussion.liked\n          };\n        } else {\n          return discussion;\n        }\n      })\n    });\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...discussions,\n        discussion: discussions.discussion.map(discussion => {\n          if (discussion.id === did) {\n            return { ...discussion,\n              liked: !discussion.liked\n            };\n          } else {\n            return discussion;\n          }\n        })\n      })\n    });\n  }; //Like a reply\n\n\n  const likeReply = (e, xid, did) => {\n    console.log(e);\n    console.log(xid);\n    console.log(did);\n    const url = `http://192.168.1.98:5000/blogs/${id}`;\n    setDiscussions({ ...discussions,\n      discussion: discussions.discussion.map(discussion => {\n        if (discussion.id === xid) {\n          discussion.replies.map(reply => {\n            if (reply.id === did) {\n              // return { ...reply, liked: !reply.liked };\n              console.log(reply.id, did + ' matches');\n            } else {\n              return reply;\n            }\n          });\n        } else {\n          return discussion;\n        }\n      })\n    }); // fetch(url, {\n    // \tmethod: 'PATCH',\n    // \theaders: {\n    // \t\t'Content-Type': 'application/json',\n    // \t},\n    // \tbody: JSON.stringify({\n    // \t\t...discussions,\n    // \t\tdiscussion: discussions.discussion.replies.map((reply) => {\n    // \t\t\tif (reply.id === did) {\n    // \t\t\t\treturn { ...reply, liked: !reply.liked };\n    // \t\t\t} else {\n    // \t\t\t\treturn reply;\n    // \t\t\t}\n    // \t\t}),\n    // \t}),\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentError\",\n      children: \"Cannot retrieve comments \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 14\n    }, this), discussions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentGoBack, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(AddComment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentSection\",\n        children: discussions.discussion.map((discussion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onDoubleClick: () => likeComment(discussion.id),\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"commentImg\",\n              src: discussion.thumbnail,\n              alt: \"userImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commentBody\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: discussion.user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 12\n                }, this), \" \", discussion.comment]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"commentEmoji\",\n                children: /*#__PURE__*/_jsxDEV(LikedComment, {\n                  liked: discussion.liked,\n                  onClick: () => likeComment(discussion.id)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"replies\",\n            children: discussion.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"replyImg\",\n                  src: reply.thumbnail,\n                  alt: \"userImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"replyBody\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: reply.replier\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 15\n                    }, this), \" \", reply.reply]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"replyEmoji\",\n                    children: /*#__PURE__*/_jsxDEV(LikedReply, {\n                      liked: reply.liked,\n                      onClick: e => likeReply(e, discussion.id, reply.id)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 14\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 12\n              }, this)\n            }, reply.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this)]\n        }, discussion.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Discussions, \"yoMyt0ptlxegUNsoeTKnP+s0VKE=\", false, function () {\n  return [useParams];\n});\n\n_c = Discussions;\nexport default Discussions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discussions\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Discussions.jsx"],"names":["LikedComment","LikedReply","useState","useEffect","AddComment","CommentGoBack","useParams","Discussions","id","error","setError","discussions","setDiscussions","replies","setReplies","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","data","catch","err","name","abort","likeComment","did","url","discussion","map","liked","method","headers","body","JSON","stringify","likeReply","e","xid","console","log","reply","index","thumbnail","user","comment","replier"],"mappings":"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","sourcesContent":["import LikedComment from './LikedComment';\nimport LikedReply from './LikedReply';\nimport { useState, useEffect } from 'react';\nimport AddComment from './AddComment';\nimport CommentGoBack from './CommentGoBack';\nimport { useParams } from 'react-router-dom';\n\nconst Discussions = () => {\n\tconst { id } = useParams();\n\tconst [error, setError] = useState(false);\n\tconst [discussions, setDiscussions] = useState(null);\n\tconst [replies, setReplies] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst abortCont = new AbortController();\n\n\t\tfetch(`http://192.168.1.98:5000/blogs/${id}`, { signal: abortCont.signal })\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error('Could not get data from the database');\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tsetDiscussions(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t\t// empty if statement\n\t\t\t\t} else {\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn () => abortCont.abort();\n\t}, [id, discussions]);\n\n\t//Like a comment\n\tconst likeComment = (did) => {\n        const url = `http://192.168.1.98:5000/blogs/${id}`;\n\t\tsetDiscussions({\n\t\t\t...discussions,\n\t\t\tdiscussion: discussions.discussion.map((discussion) => {\n\t\t\t\tif (discussion.id === did) {\n\t\t\t\t\treturn { ...discussion, liked: !discussion.liked };\n\t\t\t\t} else {\n\t\t\t\t\treturn discussion;\n\t\t\t\t}\n\t\t\t}),\n\t\t});\n        fetch(url, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t...discussions,\n\t\t\t\tdiscussion: discussions.discussion.map((discussion) => {\n\t\t\t\t\tif (discussion.id === did) {\n\t\t\t\t\t\treturn { ...discussion, liked: !discussion.liked };\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn discussion;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t}),\n\t\t});\n\t};\n\n\t//Like a reply\n\tconst likeReply = (e, xid, did) => {\n\t\tconsole.log(e);\n\t\tconsole.log(xid);\n\t\tconsole.log(did);\n\t\tconst url = `http://192.168.1.98:5000/blogs/${id}`;\n\t\tsetDiscussions({\n\t\t\t...discussions,\n\t\t\tdiscussion: discussions.discussion.map((discussion) => {\n\t\t\t\tif (discussion.id === xid) {\n\t\t\t\t\tdiscussion.replies.map((reply) => {\n\t\t\t\t\t\tif (reply.id === did) {\n\t\t\t\t\t\t\t// return { ...reply, liked: !reply.liked };\n\t\t\t\t\t\t\tconsole.log( reply.id, did + ' matches')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn reply;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\treturn discussion;\n\t\t\t\t}\n\t\t\t}),\n\t\t});\n\t\t// fetch(url, {\n\t\t// \tmethod: 'PATCH',\n\t\t// \theaders: {\n\t\t// \t\t'Content-Type': 'application/json',\n\t\t// \t},\n\t\t// \tbody: JSON.stringify({\n\t\t// \t\t...discussions,\n\t\t// \t\tdiscussion: discussions.discussion.replies.map((reply) => {\n\t\t// \t\t\tif (reply.id === did) {\n\t\t// \t\t\t\treturn { ...reply, liked: !reply.liked };\n\t\t// \t\t\t} else {\n\t\t// \t\t\t\treturn reply;\n\t\t// \t\t\t}\n\t\t// \t\t}),\n\t\t// \t}),\n\t\t// });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{error && <div className=\"commentError\">Cannot retrieve comments </div>}\n\t\t\t{discussions && (\n\t\t\t\t<>\n\t\t\t\t\t<CommentGoBack />\n\t\t\t\t\t<AddComment />\n\n\t\t\t\t\t<div className=\"commentSection\">\n\t\t\t\t\t\t{discussions.discussion.map((discussion, index) => (\n\t\t\t\t\t\t\t<div key={discussion.id}>\n\t\t\t\t\t\t\t\t<div onDoubleClick={() => likeComment(discussion.id)} className=\"comment\">\n\t\t\t\t\t\t\t\t\t<img className=\"commentImg\" src={discussion.thumbnail} alt=\"userImg\" />\n\t\t\t\t\t\t\t\t\t<div className=\"commentBody\">\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<span>{discussion.user}</span> {discussion.comment}\n\t\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"commentEmoji\">\n\t\t\t\t\t\t\t\t\t\t\t<LikedComment\n\t\t\t\t\t\t\t\t\t\t\t\tliked={discussion.liked}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => likeComment(discussion.id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"replies\">\n\t\t\t\t\t\t\t\t\t{discussion.replies.map((reply, index) => (\n\t\t\t\t\t\t\t\t\t\t<div key={reply.id}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"reply\">\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"replyImg\" src={reply.thumbnail} alt=\"userImg\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"replyBody\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{reply.replier}</span> {reply.reply}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"replyEmoji\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<LikedReply\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tliked={reply.liked}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => likeReply(e, discussion.id, reply.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Discussions;\n"]},"metadata":{},"sourceType":"module"}