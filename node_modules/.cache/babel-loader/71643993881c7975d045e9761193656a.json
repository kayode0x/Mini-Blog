{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  title\n}) => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [blogIsLoading, setBlogIsLoading] = useEffect(true);\n  useEffect(() => {\n    fetch('http://localhost:5000/blogs').then(res => {\n      return res.json();\n    }).then(data => {\n      setBlogs(data);\n      setBlogIsLoading(false);\n    });\n  }, []); //add a blog\n  //delete a blog\n\n  const deleteBlog = async id => {\n    const res = await fetch(`http://localhost:5000/blogs/${id}`, {\n      method: 'DELETE'\n    }); //gotta check if the blog was deleted from the server\n\n    res.status === 200 ? setBlogs(blogs.filter(blog => blog.id !== id)) : alert('There was a problem deleting the blog');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), blogIsLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this), blogs.length > 0 ? /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      deleteBlog: deleteBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }, this) : 'No blogs yet.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"vVoKHno3grHlzBgxxZ9z5TkB1AY=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Home.jsx"],"names":["React","useState","useEffect","BlogList","Loading","Home","title","blogs","setBlogs","blogIsLoading","setBlogIsLoading","fetch","then","res","json","data","deleteBlog","id","method","status","filter","blog","alert","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,aAAD,EAAiBC,gBAAjB,IAAqCR,SAAS,CAAC,IAAD,CAApD;AAEAA,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACVP,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACAL,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAPL;AAQH,GATQ,EASN,EATM,CAAT,CAJwB,CAexB;AAEA;;AACA,QAAMM,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC7B,UAAMJ,GAAG,GAAG,MAAMF,KAAK,CAAE,+BAA8BM,EAAG,EAAnC,EAAsC;AACzDC,MAAAA,MAAM,EAAE;AADiD,KAAtC,CAAvB,CAD6B,CAK7B;;AACAL,IAAAA,GAAG,CAACM,MAAJ,KAAe,GAAf,GACEX,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAD,CADV,GAEEK,KAAK,CAAC,uCAAD,CAFP;AAGH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMG,aAAa,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFvB,EAGMF,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAoB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEhB,KAAjB;AAAwB,MAAA,UAAU,EAAES;AAApC;AAAA;AAAA;AAAA;AAAA,YAApB,GAA2E,eAHjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApCD;;GAAMX,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BlogList from './BlogList';\nimport Loading from './Loading';\n\nconst Home = ({ title }) => {\n    const [blogs, setBlogs] = useState([])\n    const [blogIsLoading,  setBlogIsLoading] = useEffect(true)\n\n    useEffect(() => {\n        fetch('http://localhost:5000/blogs')\n            .then(res => {\n                return res.json()\n            })\n            .then(data => {\n                setBlogs(data)\n                setBlogIsLoading(false)\n            })\n    }, []) \n\n    //add a blog\n\n    //delete a blog\n    const deleteBlog = async (id) => {\n        const res = await fetch(`http://localhost:5000/blogs/${id}`, {\n            method: 'DELETE',\n        })\n\n        //gotta check if the blog was deleted from the server\n        res.status === 200\n        ? setBlogs(blogs.filter(blog => blog.id !== id))\n        : alert('There was a problem deleting the blog')\n    }\n\n    return (\n        <div className=\"home\">\n            <h1>{title}</h1>\n            { blogIsLoading && <Loading /> }\n            { blogs.length > 0 ? (<BlogList blogs={blogs} deleteBlog={deleteBlog} />) : ('No blogs yet.')}\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}