{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/NewBlog.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewBlog = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [link, setLink] = useState('');\n  const [body, setBody] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const createBlog = e => {\n    e.preventDefault();\n\n    const clear = () => {\n      setTitle('');\n      setAuthor('');\n      setLink('');\n      setBody('');\n    };\n\n    let w = title.trim();\n    let x = author.trim();\n    let y = link.trim();\n    let z = body.trim();\n\n    if (w === '' || x === '' || y === '' || z === '') {\n      alert('Please fill all fields');\n      clear();\n    } else {\n      const blog = {\n        title,\n        author,\n        link,\n        body\n      };\n      setIsLoading(true);\n      postBlog(blog);\n      clear();\n    }\n  };\n\n  const postBlog = async blog => {\n    await fetch('http://192.168.1.98:5000/blogs', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      setIsLoading(false);\n      history.go(-1);\n    }).catch(err => alert(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createBlog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: title,\n          required: true,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          name: \"author\",\n          value: author,\n          required: true,\n          onChange: e => setAuthor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"link\",\n          children: \"Image Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"link\",\n          name: \"link\",\n          value: link,\n          required: true,\n          onChange: e => setLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"blog-text\",\n          children: \"Blog Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"blog-text\",\n          id: \"blog-text\",\n          value: body,\n          required: true,\n          onChange: e => setBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Post Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 32\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Posting...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewBlog, \"yv27sV+5T3D5TCehab3VlOZ8hKw=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewBlog;\nexport default NewBlog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBlog\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/NewBlog.jsx"],"names":["useState","useHistory","NewBlog","title","setTitle","author","setAuthor","link","setLink","body","setBody","isLoading","setIsLoading","history","createBlog","e","preventDefault","clear","w","trim","x","y","z","alert","blog","postBlog","fetch","method","headers","JSON","stringify","then","go","catch","err","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\n\nconst NewBlog = () => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [link, setLink] = useState('')\n    const [body, setBody] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const history = useHistory();\n\n    const createBlog = (e) => {\n        e.preventDefault();\n        const clear = () => {\n            setTitle('')\n            setAuthor('')\n            setLink('')\n            setBody('')\n        }\n\n        let w = title.trim()\n        let x = author.trim()\n        let y = link.trim()\n        let z = body.trim()\n\n        if (w === '' || x === '' || y === '' || z === ''){\n            alert('Please fill all fields')\n            clear();\n\n        } else {\n            const blog = { title, author, link, body }\n            setIsLoading(true)\n            postBlog(blog);\n            clear();\n        }\n    }\n\n    const postBlog = async (blog) => {\n        await fetch('http://192.168.1.98:5000/blogs', {\n            method: 'POST',\n\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(blog)\n        })\n        .then(()=> {\n            setIsLoading(false)\n            history.go(-1);\n        })\n        .catch(err => alert(err))\n        \n    }\n\n    return (\n        <div className=\"add-blog\">\n            <h3>Add a new blog</h3>\n            <form onSubmit={createBlog}>\n                <div className=\"title\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input \n                        type=\"text\" \n                        id=\"title\" \n                        name=\"title\"\n                        value={title}\n                        required\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                </div>\n                <div className=\"author\">\n                    <label htmlFor=\"author\">Author</label>\n                    <input \n                        type=\"text\" \n                        id=\"author\" \n                        name=\"author\" \n                        value={author}\n                        required\n                        onChange={(e) => setAuthor(e.target.value)}\n                    />\n                </div>\n                <div className=\"link\">\n                    <label htmlFor=\"link\">Image Link</label>\n                    <input\n                        type=\"text\"\n                        id=\"link\"\n                        name=\"link\"\n                        value={link}\n                        required\n                        onChange={(e) => setLink(e.target.value)}\n                    />\n                </div>\n                <div className=\"blog-text\">\n                    <label htmlFor=\"blog-text\">Blog Post</label>\n                    <textarea \n                        name=\"blog-text\" \n                        id=\"blog-text\"\n                        value={body}\n                        required\n                        onChange={(e) => setBody(e.target.value)}\n                    ></textarea>\n                </div>\n                {!isLoading && <button type=\"submit\" className=\"btn\">Post Blog</button>}\n                { isLoading && <button disabled type=\"submit\" className=\"btn\">Posting...</button> }\n            </form>\n        </div>\n    );\n}\n\nexport default NewBlog;"]},"metadata":{},"sourceType":"module"}