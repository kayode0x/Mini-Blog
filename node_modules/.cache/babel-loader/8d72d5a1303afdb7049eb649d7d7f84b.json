{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx\",\n    _s = $RefreshSig$();\n\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Replies = ({\n  comments,\n  id\n}) => {\n  _s();\n\n  const [liked, setLiked] = useState(false);\n  const [error, setError] = useState(false);\n  const [replies, setReplies] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch('http://192.168.1.98:5000/blogs/' + id, {\n      signal: abortCont.signal\n    }).then(res => {\n      // if (!res.ok) {\n      //     throw new Error('Could not get data from the database');\n      // }\n      return res.json();\n    }).then(data => {\n      setReplies(data);\n    }).catch(err => {\n      if (err.name === 'AbortError') {// empty if statement\n      } else {\n        setError(true);\n      }\n    });\n    return () => abortCont.abort();\n  }, [id, liked]);\n\n  const likeComment = id => {\n    fetch('http://192.168.1.98:5000/blogs/' + id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n    liked ? setLiked(false) : setLiked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentSection\",\n      children: console.log(replies.discussion)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(Replies, \"SW/poV4f8JlWIivfL/KfuJq0mQI=\");\n\n_c = Replies;\nexport default Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx"],"names":["FaRegHeart","FaHeart","IconContext","useState","useEffect","Replies","comments","id","liked","setLiked","error","setError","replies","setReplies","abortCont","AbortController","fetch","signal","then","res","json","data","catch","err","name","abort","likeComment","method","headers","body","JSON","stringify","console","log","discussion"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsB;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,KAAK,CAAC,oCAAoCT,EAArC,EAAyC;AAAEU,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAApB,KAAzC,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT;AACA;AACA;AACA,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KANL,EAOKF,IAPL,CAOUG,IAAI,IAAI;AACVR,MAAAA,UAAU,CAACQ,IAAD,CAAV;AAEH,KAVL,EAWKC,KAXL,CAWWC,GAAG,IAAI;AACV,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B,CAC3B;AACH,OAFD,MAEO;AACHb,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AAEJ,KAlBL;AAoBA,WAAO,MAAMG,SAAS,CAACW,KAAV,EAAb;AAEH,GAzBQ,EAyBN,CAAClB,EAAD,EAAKC,KAAL,CAzBM,CAAT;;AA2BA,QAAMkB,WAAW,GAAInB,EAAD,IAAQ;AACxBS,IAAAA,KAAK,CAAC,oCAAoCT,EAArC,EAAyC;AAC1CoB,MAAAA,MAAM,EAAE,OADkC;AAE1CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AALoC,KAAzC,CAAL;AAQAvB,IAAAA,KAAK,GAAGC,QAAQ,CAAC,KAAD,CAAX,GAAqBA,QAAQ,CAAC,IAAD,CAAlC;AAEH,GAXD;;AAaA,sBACI;AAAA,2BACK;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACCuB,OAAO,CAACC,GAAR,CAAYrB,OAAO,CAACsB,UAApB;AADD;AAAA;AAAA;AAAA;AAAA;AADL,mBADJ;AA6BH,CA1ED;;GAAM7B,O;;KAAAA,O;AA4EN,eAAeA,OAAf","sourcesContent":["import { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState, useEffect } from 'react';\n\nconst Replies = ({ comments, id }) => {\n    const [liked, setLiked] = useState(false);\n    const [error, setError] = useState(false)\n    const [replies, setReplies] = useState(null)\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        fetch('http://192.168.1.98:5000/blogs/' + id, { signal: abortCont.signal })\n            .then(res => {\n                // if (!res.ok) {\n                //     throw new Error('Could not get data from the database');\n                // }\n                return res.json()\n            })\n            .then(data => {\n                setReplies(data)\n                \n            })\n            .catch(err => {\n                if (err.name === 'AbortError') {\n                    // empty if statement\n                } else {\n                    setError(true)\n                }\n\n            })\n\n        return () => abortCont.abort()\n\n    }, [id, liked])\n\n    const likeComment = (id) => {\n        fetch('http://192.168.1.98:5000/blogs/' + id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({  })\n        })\n\n        liked ? setLiked(false) : setLiked(true)\n        \n    }\n\n    return (\n        <>\n             <div className=\"commentSection\">\n             {console.log(replies.discussion)}\n                {/* {\n                    replies.discussion.map((discussion) => (\n                        <div key={discussion.id}>\n                            <div className=\"comment\">\n                                <img className='commentImg' src={discussion.thumbnail} alt=\"\" />\n                                <div className=\"commentBody\">\n                                    <p> <span>{discussion.user}</span> {discussion.comment}</p>\n\n                                </div>\n                                <div className=\"commentEmoji\">\n                                    {liked ? <IconContext.Provider value={{ color: 'red', className: 'love-icon' }}>\n                                        <FaHeart onClick={() => likeComment(discussion.id)} />\n                                    </IconContext.Provider>\n\n                                        : <FaRegHeart onClick={() => likeComment(discussion.id)} />}\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                    \n                } */}\n            </div> \n        </>\n        \n    );\n}\n\nexport default Replies;"]},"metadata":{},"sourceType":"module"}