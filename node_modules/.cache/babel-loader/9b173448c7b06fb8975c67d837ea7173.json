{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx\",\n    _s = $RefreshSig$();\n\nimport LikedComment from './LikedComment';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Discussions = ({\n  id\n}) => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [discussions, setDiscussions] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch('http://192.168.1.98:5000/blogs/' + id, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Could not get data from the database');\n      }\n\n      return res.json();\n    }).then(data => {\n      setDiscussions(data);\n    }).catch(err => {\n      if (err.name === 'AbortError') {// empty if statement\n      } else {\n        setError(true);\n      }\n    });\n    return () => abortCont.abort();\n  }, [id, discussions]);\n\n  const likeComment = did => {\n    const url = `http://192.168.1.98:5000/blogs/${id}`;\n    setDiscussions({ ...discussions,\n      discussion: discussions.discussion.map(discussion => {\n        if (discussion.id === did) {\n          return { ...discussion,\n            liked: !discussion.liked\n          };\n        } else {\n          return discussion;\n        }\n      })\n    });\n    fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...discussions,\n        discussion: discussions.discussion.map(discussion => {\n          if (discussion.id === did) {\n            return { ...discussion,\n              liked: !discussion.liked\n            };\n          } else {\n            return discussion;\n          }\n        })\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentError\",\n      children: \"Cannot retrieve comments \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this), discussions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentSection\",\n      children: discussions.discussion.map((discussion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"commentImg\",\n            src: discussion.thumbnail,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                children: discussion.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 11\n              }, this), \" \", discussion.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentEmoji\",\n            children: /*#__PURE__*/_jsxDEV(LikedComment, {\n              liked: discussion.liked,\n              likeComment: () => likeComment(discussion.id)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 8\n        }, this)\n      }, discussion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Discussions, \"KHJ61SwTqmU0/9D/Be1xmsNFiug=\");\n\n_c = Discussions;\nexport default Discussions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discussions\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx"],"names":["LikedComment","useState","useEffect","Discussions","id","error","setError","discussions","setDiscussions","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","data","catch","err","name","abort","likeComment","did","url","discussion","map","liked","method","headers","body","JSON","stringify","index","thumbnail","user","comment"],"mappings":"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","sourcesContent":["import LikedComment from './LikedComment';\nimport { useState, useEffect } from 'react';\n\nconst Discussions = ({ id }) => {\n\tconst [error, setError] = useState(false);\n\tconst [discussions, setDiscussions] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst abortCont = new AbortController();\n\n\t\tfetch('http://192.168.1.98:5000/blogs/' + id, { signal: abortCont.signal })\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error('Could not get data from the database');\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tsetDiscussions(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t\t// empty if statement\n\t\t\t\t} else {\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn () => abortCont.abort();\n\t}, [id, discussions]);\n\n\tconst likeComment = (did) => {\n        const url = `http://192.168.1.98:5000/blogs/${id}`;\n\t\tsetDiscussions({\n\t\t\t...discussions,\n\t\t\tdiscussion: discussions.discussion.map((discussion) => {\n\t\t\t\tif (discussion.id === did) {\n\t\t\t\t\treturn { ...discussion, liked: !discussion.liked };\n\t\t\t\t} else {\n\t\t\t\t\treturn discussion;\n\t\t\t\t}\n\t\t\t}),\n\t\t});\n        fetch(url, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t...discussions,\n\t\t\t\tdiscussion: discussions.discussion.map((discussion) => {\n\t\t\t\t\tif (discussion.id === did) {\n\t\t\t\t\t\treturn { ...discussion, liked: !discussion.liked };\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn discussion;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t}),\n\t\t});\n\n        \n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{error && <div className=\"commentError\">Cannot retrieve comments </div>}\n\t\t\t{discussions && (\n\t\t\t\t<div className=\"commentSection\">\n\t\t\t\t\t{discussions.discussion.map((discussion, index) => (\n\t\t\t\t\t\t<div key={discussion.id}>\n\t\t\t\t\t\t\t<div className=\"comment\">\n\t\t\t\t\t\t\t\t<img className=\"commentImg\" src={discussion.thumbnail} alt=\"\" />\n\t\t\t\t\t\t\t\t<div className=\"commentBody\">\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t<span>{discussion.user}</span> {discussion.comment}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"commentEmoji\">\n\t\t\t\t\t\t\t\t\t<LikedComment\n\t\t\t\t\t\t\t\t\t\tliked={discussion.liked}\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tlikeComment={() => likeComment(discussion.id)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Discussions;\n"]},"metadata":{},"sourceType":"module"}