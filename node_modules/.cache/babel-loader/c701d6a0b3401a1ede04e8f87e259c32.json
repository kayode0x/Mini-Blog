{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx\",\n    _s = $RefreshSig$();\n\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Replies = ({\n  comments,\n  id\n}) => {\n  _s();\n\n  const [liked, setLiked] = useState(false);\n  const [error, setError] = useState(false);\n  const [replies, setReplies] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch('http://192.168.1.98:5000/blogs/' + id, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error('Could not get data from the database');\n      }\n\n      return res.json();\n    }).then(data => {\n      setReplies(data);\n      console.log(data.discussion[id].liked); // data.discussion[id].liked ? setLiked(false) : setLiked(true)\n    }).catch(err => {\n      if (err.name === 'AbortError') {// empty if statement\n      } else {\n        alert(err.message);\n      }\n    });\n    return () => abortCont.abort();\n  }, [id, liked]);\n\n  const likeComment = id => {\n    fetch('http://192.168.1.98:5000/blogs/' + id, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    });\n    liked ? setLiked(false) : setLiked(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentError\",\n      children: \"Cannot retrieve comments \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), replies && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentSection\",\n      children: replies.discussion.map(discussion => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"commentImg\",\n            src: discussion.thumbnail,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentBody\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: discussion.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), \" \", discussion.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentEmoji\",\n            children: liked ? /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n              value: {\n                color: 'red',\n                className: 'love-icon'\n              },\n              children: /*#__PURE__*/_jsxDEV(FaHeart, {\n                onClick: () => likeComment(discussion.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {\n              onClick: () => likeComment(discussion.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, discussion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Replies, \"SW/poV4f8JlWIivfL/KfuJq0mQI=\");\n\n_c = Replies;\nexport default Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Replies.jsx"],"names":["FaRegHeart","FaHeart","IconContext","useState","useEffect","Replies","comments","id","liked","setLiked","error","setError","replies","setReplies","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","data","console","log","discussion","catch","err","name","alert","message","abort","likeComment","method","headers","body","JSON","stringify","map","thumbnail","user","comment","color","className"],"mappings":"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","sourcesContent":["import { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { IconContext } from 'react-icons';\nimport { useState, useEffect } from 'react';\n\nconst Replies = ({ comments, id }) => {\n    const [liked, setLiked] = useState(false);\n    const [error, setError] = useState(false)\n    const [replies, setReplies] = useState(null)\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        fetch('http://192.168.1.98:5000/blogs/' + id, { signal: abortCont.signal })\n            .then(res => {\n                if (!res.ok) {\n                    throw new Error('Could not get data from the database');\n                }\n                return res.json()\n            })\n            .then(data => {\n                setReplies(data)\n                console.log(data.discussion[id].liked)\n                // data.discussion[id].liked ? setLiked(false) : setLiked(true)\n            })\n            .catch(err => {\n                if (err.name === 'AbortError') {\n                    // empty if statement\n                } else {\n                    alert(err.message)\n                }\n\n            })\n\n        return () => abortCont.abort()\n\n    }, [id, liked])\n\n    const likeComment = (id) => {\n        fetch('http://192.168.1.98:5000/blogs/' + id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({  })\n        })\n\n        liked ? setLiked(false) : setLiked(true)\n        \n    }\n\n    return (\n        <>\n            {error && <div className=\"commentError\">Cannot retrieve comments </div>}\n            { replies && <div className=\"commentSection\">\n                {\n                    replies.discussion.map((discussion) => (\n                        <div key={discussion.id}>\n                            <div className=\"comment\">\n                                <img className='commentImg' src={discussion.thumbnail} alt=\"\" />\n                                <div className=\"commentBody\">\n                                    <p> <span>{discussion.user}</span> {discussion.comment}</p>\n\n                                </div>\n                                <div className=\"commentEmoji\">\n                                    {liked ? <IconContext.Provider value={{ color: 'red', className: 'love-icon' }}>\n                                        <FaHeart onClick={() => likeComment(discussion.id)} />\n                                    </IconContext.Provider>\n\n                                        : <FaRegHeart onClick={() => likeComment(discussion.id)} />}\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                    \n                }\n            </div> }\n        </>\n        \n    );\n}\n\nexport default Replies;"]},"metadata":{},"sourceType":"module"}