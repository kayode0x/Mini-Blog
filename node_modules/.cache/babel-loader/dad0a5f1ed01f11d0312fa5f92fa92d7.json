{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport Loading from './Loading';\nimport Error from './Error';\nimport NewBlog from './NewBlog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  title\n}) => {\n  _s();\n\n  const [blogs, setBlogs] = useState(null);\n  const [blogIsLoading, setBlogIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch('http://192.168.1.98:5000/blogs', {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error('Could not get blogs from the database');\n        }\n\n        return res.json();\n      }).then(data => {\n        setBlogs(data);\n        setBlogIsLoading(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {// empty if statement\n        } else {\n          setBlogIsLoading(false);\n          setError(err);\n        }\n      });\n    }, 5000);\n    return () => abortCont.abort();\n  }, []); //add a blog\n\n  const addBlog = async blog => {\n    const res = await fetch('http://192.168.1.98:5000/blogs', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(blog)\n    });\n    const data = await res.json();\n    setBlogs([...blogs, data]);\n  }; //delete a blog\n\n\n  const deleteBlog = async id => {\n    const res = await fetch(`http://192.168.1.98:5000/blogs/${id}`, {\n      method: 'DELETE'\n    }); //gotta check if the blog was deleted from the server\n\n    res.status === 200 ? setBlogs(blogs.filter(blog => blog.id !== id)) : alert('There was a problem deleting the blog');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this), blogIsLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 32\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      deleteBlog: deleteBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 24\n    }, this), blogs && /*#__PURE__*/_jsxDEV(NewBlog, {\n      addBlog: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"dnY6Y9EiNpw8IsXViunMWPrfJM4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Home.jsx"],"names":["useState","useEffect","BlogList","Loading","Error","NewBlog","Home","title","blogs","setBlogs","blogIsLoading","setBlogIsLoading","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","json","data","catch","err","name","abort","addBlog","blog","method","headers","body","JSON","stringify","deleteBlog","id","status","filter","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport BlogList from './BlogList';\nimport Loading from './Loading';\nimport Error from './Error';\nimport NewBlog from './NewBlog';\n\nconst Home = ({ title }) => {\n    const [blogs, setBlogs] = useState(null)\n    const [blogIsLoading,  setBlogIsLoading] = useState(true)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch('http://192.168.1.98:5000/blogs', { signal: abortCont.signal })\n                .then(res => {\n                    if(!res.ok){\n                        throw new Error('Could not get blogs from the database');\n                    }\n\n                    return res.json()\n                })\n                .then(data => {\n                    setBlogs(data)\n                    setBlogIsLoading(false)\n                    setError(null)\n                })\n                .catch(err => {\n                    if (err.name === 'AbortError'){\n                        // empty if statement\n                    } else {\n                        setBlogIsLoading(false)\n                        setError(err)\n                    }\n                    \n                })\n        }, 5000);\n\n        return () => abortCont.abort()\n\n    }, []) \n\n    //add a blog\n    const addBlog = async (blog) => {\n        const res = await fetch('http://192.168.1.98:5000/blogs', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(blog),\n        })\n        \n        const data = await res.json();\n        setBlogs([...blogs, data])\n    }\n\n    //delete a blog\n    const deleteBlog = async (id) => {\n        const res = await fetch(`http://192.168.1.98:5000/blogs/${id}`, {\n            method: 'DELETE',\n        })\n\n        //gotta check if the blog was deleted from the server\n        res.status === 200\n        ? setBlogs(blogs.filter(blog => blog.id !== id))\n        : alert('There was a problem deleting the blog')\n    }\n\n    return (\n        <div className=\"home\">\n            <h1>{title}</h1> \n            { error && <Error/> }\n            { blogIsLoading && <Loading /> }\n            { blogs && <BlogList blogs={blogs} deleteBlog={deleteBlog} />}\n            { blogs && <NewBlog addBlog={addBlog}/>}\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}