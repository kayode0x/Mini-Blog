{"ast":null,"code":"var _jsxFileName = \"/Users/kayode/Desktop/React/playground/mini-blog/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = ({\n  title\n}) => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]); // const [blogIsLoading,  setBlogIsLoading] = useState(true)\n\n  useEffect(() => {\n    // fetch('http://localhost:5000/blogs')\n    //     .then(res => {\n    //         return res.json()\n    //     })\n    //     .then(data => {\n    //         setBlogs(data)\n    //         // setBlogIsLoading(false)\n    //     })\n    const getBlogs = async () => {\n      const blogsFromServer = await fetchBlogs();\n      setBlogs(blogsFromServer);\n    };\n\n    getBlogs();\n  }, []);\n\n  const fetchBlogs = async () => {\n    const res = await fetch('http://localhost:5000/blogs');\n    const data = res.json();\n    return data;\n  }; //add a blog\n  //delete a blog\n\n\n  const deleteBlog = async id => {\n    const res = await fetch(`http://localhost:5000/blogs/${id}`, {\n      method: 'DELETE'\n    }); //gotta check if the blog was deleted from the server\n\n    res.status === 200 ? setBlogs(blogs.filter(blog => blog.id !== id)) : alert('There was a problem deleting the blog');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), blogs.length > 0 ? /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      deleteBlog: deleteBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 35\n    }, this) : 'No blogs yet.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/kayode/Desktop/React/playground/mini-blog/src/components/Home.jsx"],"names":["React","useState","useEffect","BlogList","Home","title","blogs","setBlogs","getBlogs","blogsFromServer","fetchBlogs","res","fetch","data","json","deleteBlog","id","method","status","filter","blog","alert","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADwB,CAExB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMM,QAAQ,GAAG,YAAY;AACzB,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACH,KAHD;;AAKAD,IAAAA,QAAQ;AACX,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAME,UAAU,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAGF,GAAG,CAACG,IAAJ,EAAb;AAEA,WAAOD,IAAP;AACH,GALD,CAtBwB,CA6BxB;AAEA;;;AACA,QAAME,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC7B,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AACzDC,MAAAA,MAAM,EAAE;AADiD,KAAtC,CAAvB,CAD6B,CAK7B;;AACAN,IAAAA,GAAG,CAACO,MAAJ,KAAe,GAAf,GACEX,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAD,CADV,GAEEK,KAAK,CAAC,uCAAD,CAFP;AAGH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,EAGMC,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAoB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEhB,KAAjB;AAAwB,MAAA,UAAU,EAAES;AAApC;AAAA;AAAA;AAAA;AAAA,YAApB,GAA2E,eAHjF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAlDD;;GAAMX,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BlogList from './BlogList';\n\nconst Home = ({ title }) => {\n    const [blogs, setBlogs] = useState([])\n    // const [blogIsLoading,  setBlogIsLoading] = useState(true)\n\n    useEffect(() => {\n        // fetch('http://localhost:5000/blogs')\n        //     .then(res => {\n        //         return res.json()\n        //     })\n        //     .then(data => {\n        //         setBlogs(data)\n        //         // setBlogIsLoading(false)\n        //     })\n\n        const getBlogs = async () => {\n            const blogsFromServer = await fetchBlogs();\n            setBlogs(blogsFromServer)\n        }\n\n        getBlogs();\n    }, []) \n\n    const fetchBlogs = async () => {\n        const res = await fetch('http://localhost:5000/blogs')\n        const data = res.json()\n\n        return data\n    }\n\n    //add a blog\n\n    //delete a blog\n    const deleteBlog = async (id) => {\n        const res = await fetch(`http://localhost:5000/blogs/${id}`, {\n            method: 'DELETE',\n        })\n\n        //gotta check if the blog was deleted from the server\n        res.status === 200\n        ? setBlogs(blogs.filter(blog => blog.id !== id))\n        : alert('There was a problem deleting the blog')\n    }\n\n    return (\n        <div className=\"home\">\n            <h1>{title}</h1>\n            {/* { blogIsLoading && <div>Loading...</div> } */}\n            { blogs.length > 0 ? (<BlogList blogs={blogs} deleteBlog={deleteBlog} />) : ('No blogs yet.')}\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}